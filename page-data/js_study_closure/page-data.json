{"componentChunkName":"component---src-templates-post-template-tsx","path":"/js_study_closure/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h2>1. 이번에는 Closure에 대해서 알아보자.</h2>\n<p>Closure 는 아마도 함수형 프로그래밍 언어라면은 가지고 있는 문법으로써 Javascript 만이 가지는 특징이라고 보기에는 어려울 것이다.</p>\n<p>Closure는 <em>함수와 그 함수가 선언된 Lexical 환경과의 조합이다.</em> 라고 되어있다.(<a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Closures\" target=\"_blank\" rel=\"nofollow\">https://developer.mozilla.org/ko/docs/Web/JavaScript/Closures</a>)</p>\n<p>우리는 자바스크립트에서 함수를 객체로 다룬다는 것을 알고 있다. 그렇다면 어떤 함수 f 가 존재한다고 하였을 때, f라는 함수 객체는\r\n어떠한 프로퍼티들을 가지고 있을 거라고 생각할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">\r\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">function</span> <span class=\"token function\">g</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> <span class=\"token string\">\"C\"</span><span class=\"token punctuation\">;</span>\r\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">+</span> b <span class=\"token operator\">+</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// -> ABC 출력</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n</code></pre></div>\n<p>위와 같은 코드가 있다고 할 때, g를 중첩 함수, 또는 내부 함수라고 하고 f를 g의 외부 함수라고 부른다. 그러면\r\nf, g의 렉시컬 환경 컴포넌트는 아래처럼 나타낼 수 있다.</p>\n<p><img src=\"https://github.com/boxak/boxak.github.io/assets/38724041/751e58e2-80b3-4149-839f-37b3abf3faf1\" alt=\"image\"></p>\n<p>즉, 위 이미지에서 처럼 함수 g가 선언이 될 때, g는 외부 함수인 f의 렉시컬 환경을 참조하게 된다.</p>\n<p>이처럼 클로저라는 개념에서 함수 g가 어떤 변수에 할당이 되어서</p>","frontmatter":{"title":"[Javscript-Study] Lexical Scope와 Closure - 2","summary":"렉시컬 스코프, 클로저에 대해 알아보는 글","date":"2024.05.31.","categories":["자바스크립트 기본기"],"thumbnail":{"publicURL":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#e8d848","images":{"fallback":{"src":"/static/854d97a2047b5eedb2aa8ec6d3633cbe/fcb2f/JavaScript.jpg","srcSet":"/static/854d97a2047b5eedb2aa8ec6d3633cbe/f1930/JavaScript.jpg 300w,\n/static/854d97a2047b5eedb2aa8ec6d3633cbe/550ca/JavaScript.jpg 600w,\n/static/854d97a2047b5eedb2aa8ec6d3633cbe/fcb2f/JavaScript.jpg 1200w","sizes":"(min-width: 1200px) 1200px, 100vw"},"sources":[{"srcSet":"/static/854d97a2047b5eedb2aa8ec6d3633cbe/c7da1/JavaScript.webp 300w,\n/static/854d97a2047b5eedb2aa8ec6d3633cbe/22c65/JavaScript.webp 600w,\n/static/854d97a2047b5eedb2aa8ec6d3633cbe/81547/JavaScript.webp 1200w","type":"image/webp","sizes":"(min-width: 1200px) 1200px, 100vw"}]},"width":1200,"height":630}},"publicURL":"/static/854d97a2047b5eedb2aa8ec6d3633cbe/JavaScript.jpeg"}}}}}]}},"pageContext":{"slug":"/js_study_closure/"}},"staticQueryHashes":[],"slicesMap":{}}